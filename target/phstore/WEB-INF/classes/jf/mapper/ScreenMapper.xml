<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jf.dao.ScreenMapper">
  <resultMap id="BaseResultMap" type="jf.bean.Screen">
    <id column="screenId" jdbcType="INTEGER" property="screenid" />
    <result column="screenName" jdbcType="VARCHAR" property="screenname" />
    <result column="screenSize" jdbcType="VARCHAR" property="screensize" />
    <result column="resolution" jdbcType="VARCHAR" property="resolution" />
    <result column="screenOcc" jdbcType="VARCHAR" property="screenocc" />
    <result column="screenShape" jdbcType="VARCHAR" property="screenshape" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    screenId, screenName, screenSize, resolution, screenOcc, screenShape
  </sql>
  <select id="selectByExample" parameterType="jf.bean.ScreenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from screen
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from screen
    where screenId = #{screenid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from screen
    where screenId = #{screenid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jf.bean.ScreenExample">
    delete from screen
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jf.bean.Screen">
    insert into screen (screenId, screenName, screenSize, 
      resolution, screenOcc, screenShape
      )
    values (#{screenid,jdbcType=INTEGER}, #{screenname,jdbcType=VARCHAR}, #{screensize,jdbcType=VARCHAR}, 
      #{resolution,jdbcType=VARCHAR}, #{screenocc,jdbcType=VARCHAR}, #{screenshape,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="jf.bean.Screen">
    insert into screen
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="screenid != null">
        screenId,
      </if>
      <if test="screenname != null">
        screenName,
      </if>
      <if test="screensize != null">
        screenSize,
      </if>
      <if test="resolution != null">
        resolution,
      </if>
      <if test="screenocc != null">
        screenOcc,
      </if>
      <if test="screenshape != null">
        screenShape,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="screenid != null">
        #{screenid,jdbcType=INTEGER},
      </if>
      <if test="screenname != null">
        #{screenname,jdbcType=VARCHAR},
      </if>
      <if test="screensize != null">
        #{screensize,jdbcType=VARCHAR},
      </if>
      <if test="resolution != null">
        #{resolution,jdbcType=VARCHAR},
      </if>
      <if test="screenocc != null">
        #{screenocc,jdbcType=VARCHAR},
      </if>
      <if test="screenshape != null">
        #{screenshape,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jf.bean.ScreenExample" resultType="java.lang.Long">
    select count(*) from screen
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update screen
    <set>
      <if test="record.screenid != null">
        screenId = #{record.screenid,jdbcType=INTEGER},
      </if>
      <if test="record.screenname != null">
        screenName = #{record.screenname,jdbcType=VARCHAR},
      </if>
      <if test="record.screensize != null">
        screenSize = #{record.screensize,jdbcType=VARCHAR},
      </if>
      <if test="record.resolution != null">
        resolution = #{record.resolution,jdbcType=VARCHAR},
      </if>
      <if test="record.screenocc != null">
        screenOcc = #{record.screenocc,jdbcType=VARCHAR},
      </if>
      <if test="record.screenshape != null">
        screenShape = #{record.screenshape,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update screen
    set screenId = #{record.screenid,jdbcType=INTEGER},
      screenName = #{record.screenname,jdbcType=VARCHAR},
      screenSize = #{record.screensize,jdbcType=VARCHAR},
      resolution = #{record.resolution,jdbcType=VARCHAR},
      screenOcc = #{record.screenocc,jdbcType=VARCHAR},
      screenShape = #{record.screenshape,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jf.bean.Screen">
    update screen
    <set>
      <if test="screenname != null">
        screenName = #{screenname,jdbcType=VARCHAR},
      </if>
      <if test="screensize != null">
        screenSize = #{screensize,jdbcType=VARCHAR},
      </if>
      <if test="resolution != null">
        resolution = #{resolution,jdbcType=VARCHAR},
      </if>
      <if test="screenocc != null">
        screenOcc = #{screenocc,jdbcType=VARCHAR},
      </if>
      <if test="screenshape != null">
        screenShape = #{screenshape,jdbcType=VARCHAR},
      </if>
    </set>
    where screenId = #{screenid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jf.bean.Screen">
    update screen
    set screenName = #{screenname,jdbcType=VARCHAR},
      screenSize = #{screensize,jdbcType=VARCHAR},
      resolution = #{resolution,jdbcType=VARCHAR},
      screenOcc = #{screenocc,jdbcType=VARCHAR},
      screenShape = #{screenshape,jdbcType=VARCHAR}
    where screenId = #{screenid,jdbcType=INTEGER}
  </update>
</mapper>