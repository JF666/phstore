<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jf.dao.AllproMapper">
  <resultMap id="BaseResultMap" type="jf.bean.Allpro">
    <id column="allId" jdbcType="INTEGER" property="allid" />
    <result column="sellerId" jdbcType="INTEGER" property="sellerid" />
    <result column="proName" jdbcType="VARCHAR" property="proname" />
    <result column="minPrice" jdbcType="VARCHAR" property="minprice" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="discount" jdbcType="VARCHAR" property="discount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    allId, sellerId, proName, minPrice, pic, intro, discount
  </sql>
  <select id="selectByExample" parameterType="jf.bean.AllproExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from allpro
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from allpro
    where allId = #{allid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from allpro
    where allId = #{allid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jf.bean.AllproExample">
    delete from allpro
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jf.bean.Allpro">
    insert into allpro (allId, sellerId, proName, 
      minPrice, pic, intro, 
      discount)
    values (#{allid,jdbcType=INTEGER}, #{sellerid,jdbcType=INTEGER}, #{proname,jdbcType=VARCHAR}, 
      #{minprice,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, 
      #{discount,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="jf.bean.Allpro">
    insert into allpro
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="allid != null">
        allId,
      </if>
      <if test="sellerid != null">
        sellerId,
      </if>
      <if test="proname != null">
        proName,
      </if>
      <if test="minprice != null">
        minPrice,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="discount != null">
        discount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="allid != null">
        #{allid,jdbcType=INTEGER},
      </if>
      <if test="sellerid != null">
        #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="proname != null">
        #{proname,jdbcType=VARCHAR},
      </if>
      <if test="minprice != null">
        #{minprice,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jf.bean.AllproExample" resultType="java.lang.Long">
    select count(*) from allpro
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update allpro
    <set>
      <if test="record.allid != null">
        allId = #{record.allid,jdbcType=INTEGER},
      </if>
      <if test="record.sellerid != null">
        sellerId = #{record.sellerid,jdbcType=INTEGER},
      </if>
      <if test="record.proname != null">
        proName = #{record.proname,jdbcType=VARCHAR},
      </if>
      <if test="record.minprice != null">
        minPrice = #{record.minprice,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update allpro
    set allId = #{record.allid,jdbcType=INTEGER},
      sellerId = #{record.sellerid,jdbcType=INTEGER},
      proName = #{record.proname,jdbcType=VARCHAR},
      minPrice = #{record.minprice,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jf.bean.Allpro">
    update allpro
    <set>
      <if test="sellerid != null">
        sellerId = #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="proname != null">
        proName = #{proname,jdbcType=VARCHAR},
      </if>
      <if test="minprice != null">
        minPrice = #{minprice,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=VARCHAR},
      </if>
    </set>
    where allId = #{allid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jf.bean.Allpro">
    update allpro
    set sellerId = #{sellerid,jdbcType=INTEGER},
      proName = #{proname,jdbcType=VARCHAR},
      minPrice = #{minprice,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=VARCHAR}
    where allId = #{allid,jdbcType=INTEGER}
  </update>
</mapper>